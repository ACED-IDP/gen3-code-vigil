name: Integration Tests

on: pull_request

jobs:
    run_integration_tests:
        runs-on: ubuntu-latest

        defaults:
          run:
            working-directory: gen3-integration-tests

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JENKINS_USERNAME: "PlanXCyborg"
          JENKINS_PASSWORD: ${{ secrets.JENKINS_API_TOKEN }}
          REPO: ${{ github.event.repository.name }}
          BRANCH: ${{ github.event.pull_request.head.ref }}
          PR_NUM: ${{ github.event.pull_request.number }}
          PR_LABELS: ${{ toJson(github.event.pull_request.labels.*.name) }}
          NAMESPACE: "jenkins-brain"

        steps:
          - name: Checkout code
            uses: actions/checkout@v4

          - name: Set up Python
            uses: actions/setup-python@v2
            with:
              python-version: 3.9

          - name: Install dependencies
            run: |
              python -m pip install --upgrade pip
              pip install poetry
              poetry install -vv

          # - name: Select CI environment
          #   run: |
          #     labels="${PR_LABELS//\\n/ }"
          #     env_label=$(echo "$labels" | jq -r 'map(select(test("jenkins-"; "i"))) | first')
          #     if [[ $env_label != "" && $env_label != null ]]; then
          #       echo "Found PR label $env_label"
          #       poetry run python -m utils.gen3_ci.select_ci_environment $env_label
          #     else
          #       poetry run python -m utils.gen3_ci.select_ci_environment
          #     fi

          # - name: Prepare CI environment
          #   run: |
          #     poetry run python -m utils.gen3_ci.prepare_ci_environment

          - name: Generate API keys
            run: |
              echo "Done"

          - name: Set Gen3 API keys
            run: |
              mkdir -p $HOME/.gen3
              API_KEY="${{ secrets.GEN3_API_KEY_JENKINS_BRAIN_USER1 }}"
              echo "$API_KEY" > $HOME/.gen3/$NAMESPACE.json

          - name: Run tests
            run: poetry run pytest --html=report.html --self-contained-html -n auto -m "not wip"

          - name: Release CI environment
            if: always()
            run: |
              poetry run python -m utils.gen3_ci.release_ci_environment
